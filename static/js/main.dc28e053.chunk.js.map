{"version":3,"sources":["Components/navbar.module.css","Components/navbar.js","Components/newAddName.js","Components/header.js","Components/newAddNames.js","Components/monday.js","Components/tuesday.js","App.js","serviceWorker.js","index.js","Components/monday.module.css"],"names":["module","exports","Navbar","state","isMenu","toggleMenu","setState","render","classForMenu1","s","menuIconActive","menuIcon","className","nav","onClick","item","activeClassName","to","React","Component","newAddName","names","name","props","title","Header","error","onKeyPress","e","key","onAddNameButtonClick","onTitleChanged","currentTarget","value","newNameTitleRef","createRef","newText","addName","inputClass","header","headerTitle","onChange","type","placeholder","ref","NewAddNames","namesElements","map","Monday","monday","Tuesday","App","newName","newNames","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dc28e053.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__3OMMe\",\"item\":\"navbar_item__22EIu\",\"menuIcon\":\"navbar_menuIcon__YxH_o\",\"menuIconActive\":\"navbar_menuIconActive__2a36Z\"};","import React from 'react';\nimport s from './navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nclass Navbar extends React.Component {\n    state = {\n        isMenu: false\n    }\n\n    // onShowFiltersClick = () => {\n    //     this.setState({isHidden: true})\n    // }\n    // onHideFiltersClick = () => {\n    //     this.setState({isHidden: false})\n    // }\n\n    toggleMenu = ()=> {\n        this.setState({\n            isMenu: !this.state.isMenu\n        })\n    }\n\n    render = () => {\n\n        let classForMenu1 = this.state.isMenu ? s.menuIconActive + ' ' + s.menuIcon : s.menuIcon ;\n\n        return (\n\n            <nav className={s.nav}>\n\n                <div className={classForMenu1}\n                    onClick={this.toggleMenu}></div>\n\n                {this.state.isMenu && <div>\n                    <div className={s.item}>\n                        <NavLink activeClassName = 'active' to= '/monday'> Monday</NavLink>\n                    </div>\n                    <div className={s.item}>\n                        <NavLink activeClassName = 'active' to = '/tuesday'> Tuesday</NavLink>\n                    </div>\n                    <div className={s.item}>\n                        < NavLink activeClassName= 'active' to = \"/wednesday\"> Wednesday </NavLink>\n                    </div>\n                    <div className={s.item}>\n                        <NavLink activeClassName= 'active' to =\"/thursday\"> Thursday</NavLink>\n                    </div>\n                    <div className={s.item}>\n                        <NavLink activeClassName= 'active' to = \"/friday\"> Friday</NavLink>\n                    </div>\n                    <div className={s.item}>\n                        <NavLink activeClassName= 'active' to = \"/saturday\"> Saturday</NavLink>\n                    </div>\n                    <div className={s.item}>\n                        <NavLink activeClassName= 'active' to =\"/sunday\"> Sunday </NavLink>\n                    </div>\n                </div>}\n\n                {/*{!this.state.isHidden && <button className={s.cross} onClick={this.onShowFiltersClick}></button>}*/}\n                {/*{this.state.isHidden && <button className={s.burger} onClick={this.onHideFiltersClick}></button>}*/}\n            </nav>\n\n\n        )\n\n    }\n}\n\n\nexport default Navbar;\n","import React from 'react';\nimport s from './monday.module.css'\n\nclass  newAddName extends React.Component {\n\n  render = () => {\n\n    return (\n        <div className={s.names}>\n            <div className= {s.name}>\n                <span> {this.props.title}</span>\n            </div>\n          </div>\n\n\n\n\n    );\n  }\n}\n\nexport default newAddName;\n","import React from 'react';\nimport s from './monday.module.css'\n\n\nclass Header extends React.Component {\n    state = {\n        error: false,\n        title:\"\"\n    }\n    onKeyPress =  (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddNameButtonClick()}\n    }\n    onTitleChanged = (e) => {\n        this.setState({title:e.currentTarget.value})\n    }\n\n    newNameTitleRef = React.createRef()\n\n\n    onAddNameButtonClick = () => {\n\n        let newText = this.state.title\n        this.state.title = \"\"\n        if (newText !==\"\"){\n        this.props.addName(newText)\n            this.setState( {error:false, title: \"\"})}\n        else { this.setState( {error:true})}\n\n    }\n\n    render = () => {\nconst inputClass = this.state.error ? \"error\" : \"\"\n\n\n        return (\n\n            <div className={s.header}>\n\n                <h3 className={s.headerTitle}>All users names</h3>\n                <div className=\"todoList-newTaskForm\">\n                    <input value = {this.state.title}\n                           onChange = {this.onTitleChanged}\n                           onKeyPress={this.onKeyPress}\n                           className= {inputClass} type=\"text\" placeholder= \"New users name\"\n                           ref={this.newNameTitleRef}/>\n                    <button className=\"button\" onClick={this.onAddNameButtonClick}>Add </button>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport NewAddName from \"./newAddName\";\nimport s from './monday.module.css'\n\n\nclass NewAddNames extends React.Component {\n\n    render = (props) => {\n\n        let namesElements = this.props.names.map((name) => {\n\n            return <NewAddName\n                title={name.title}/>\n        })\n\n\n        return (\n            <div className= {s.names}>\n                <div className={s.name}>\n                {namesElements}\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default NewAddNames;\n","import React from 'react';\nimport s from './monday.module.css';\nimport newAddName from \"./newAddName\";\nimport Header from \"./header\";\nimport NewAddNames from \"./newAddNames\";\n\nconst Monday = (props) => {\n\n    return <div className={s.monday}>\n\n        <Header addName = {props.addName} />\n        <NewAddNames names = {props.names}/>\n\n    </div>\n\n    }\n\n\nexport default Monday;\n","import React from 'react';\nimport s from './navbar.module.css';\n\nconst Tuesday = () => {\n    return <div>\n        Tuesday\n    </div>\n\n}\n\nexport default Tuesday;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./Components/navbar\";\nimport Monday from \"./Components/monday\";\nimport Tuesday from \"./Components/tuesday\";\n\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nclass App extends React.Component {\n    state = {\n        names: [\n            {title: \"Markusha\"},\n        ]\n    }\n    addName = (newText) => {\n\n        let newName = {title: newText}\n        let newNames = [...this.state.names, newName]\n        this.setState({\n            names: newNames\n        })\n\n    }\n\n\n    render = () => {\n        return (\n            <BrowserRouter>\n                <div className=\"App-wrapper\">\n                    <Navbar/>\n                    <div className=\"app-wrapper-content\">\n                        {/*<Header addName={addName}/>*/}\n                        {/*<NewAddNames names={state.names/>*/}\n                        <Route path = '/monday' render={(props) => <Monday  addName={this.addName}  names={this.state.names}/>}></Route>\n                        <Route path = '/tuesday' component={Tuesday}></Route>\n\n                    </div>\n\n\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monday\":\"monday_monday__2gC9v\",\"header\":\"monday_header__281gX\",\"headerTitle\":\"monday_headerTitle__3xxnN\",\"names\":\"monday_names__3C4TP\",\"name\":\"monday_name__vJJGM\"};"],"sourceRoot":""}